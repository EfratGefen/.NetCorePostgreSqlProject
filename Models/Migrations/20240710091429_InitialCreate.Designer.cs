// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.MODELS;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(CustomerContext))]
    [Migration("20240710091429_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.MODELS.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GLAddition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GLAxis")
                        .HasColumnType("integer");

                    b.Property<double>("GLIndex")
                        .HasColumnType("double precision");

                    b.Property<string>("GLNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GLPrizma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GLcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GModel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GPD")
                        .HasColumnType("integer");

                    b.Property<string>("GRAddition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GRAxis")
                        .HasColumnType("integer");

                    b.Property<string>("GRNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GRPrizma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GRcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GRindex")
                        .HasColumnType("double precision");

                    b.Property<int>("LAxis")
                        .HasColumnType("integer");

                    b.Property<double>("LBC")
                        .HasColumnType("double precision");

                    b.Property<string>("LNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreGLAddition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PreGLAxis")
                        .HasColumnType("integer");

                    b.Property<double>("PreGLIndex")
                        .HasColumnType("double precision");

                    b.Property<string>("PreGLNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreGLPrizma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreGLcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PreGPD")
                        .HasColumnType("integer");

                    b.Property<string>("PreGRAddition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PreGRAxis")
                        .HasColumnType("integer");

                    b.Property<string>("PreGRNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreGRPrizma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PreGRcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PreGRindex")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RAxis")
                        .HasColumnType("integer");

                    b.Property<double>("RBC")
                        .HasColumnType("double precision");

                    b.Property<string>("RNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rcylinder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
